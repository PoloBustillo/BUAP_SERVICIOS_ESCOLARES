/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package buap.intro_programacion;

import buap.intro_programacion.models.Curso;
import buap.intro_programacion.models.E_Auxiliar;
import buap.intro_programacion.models.Escuela;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author leopo
 */
public class MainUI extends javax.swing.JFrame {

    //Se prefiere ArrayList porque tiene metodos de utilidad como contains
    //Lista de las escuelas creadas
    private ArrayList<Escuela> escuelas = new ArrayList<>();

    //JList utiliza modelos en lugar de arrays para poblar la lista
    ArrayList<DefaultListModel> empleadosListas = new ArrayList<>();
    ArrayList<DefaultListModel> estudiantesListas = new ArrayList<>();
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    //usado para centrar el frame inicial y tener un tamaño adecuado
    private void centerFrame() {
        double width = screenSize.getWidth();
        double height = screenSize.getHeight();
        setSize(new Dimension((int) (width - 200), (int) (height - 200)));
        int x = (int) ((screenSize.getWidth() - this.getWidth()) / 2);
        int y = (int) ((screenSize.getHeight() - this.getHeight()) / 2);
        setLocation(x, y);
    }

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if (Utils.LOOK_AND_FEEL.equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            initComponents();
            centerFrame();
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        TabPanel = new javax.swing.JTabbedPane();
        javax.swing.JMenuBar MenuBar = new javax.swing.JMenuBar();
        MenuAcciones = new javax.swing.JMenu();
        CrearMenuSub = new javax.swing.JMenu();
        escuelaMenuItem = new javax.swing.JMenuItem();
        empleadoMenuItem = new javax.swing.JMenuItem();
        cursoMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ExitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MenuBar.setBackground(new java.awt.Color(135, 35, 235));
        MenuBar.setToolTipText("");

        MenuAcciones.setText("Acciones");
        MenuAcciones.setMargin(new java.awt.Insets(3, 15, 3, 15));

        CrearMenuSub.setText("Crear");

        escuelaMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        escuelaMenuItem.setText("Escuela");
        escuelaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escuelaMenuItemActionPerformed(evt);
            }
        });
        CrearMenuSub.add(escuelaMenuItem);

        empleadoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        empleadoMenuItem.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        empleadoMenuItem.setText("Empleado");
        empleadoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empleadoMenuItemActionPerformed(evt);
            }
        });
        CrearMenuSub.add(empleadoMenuItem);

        cursoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        cursoMenuItem.setText("Curso");
        cursoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cursoMenuItemActionPerformed(evt);
            }
        });
        CrearMenuSub.add(cursoMenuItem);

        MenuAcciones.add(CrearMenuSub);
        MenuAcciones.add(jSeparator1);

        ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ExitMenuItem.setText("Salir");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        MenuAcciones.add(ExitMenuItem);

        MenuBar.add(MenuAcciones);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(TabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(TabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void escuelaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escuelaMenuItemActionPerformed
        //Cuando el usuario de click en Crear Escuela o Shift + E

        //Si el maximo de escuelas es superado -> mensaje de error
        if (Utils.MAX_SCHOOLS >= escuelas.size()) {
            //Se crea un objeto escuela
            Escuela escuela = new Escuela();

            //Pide al usuario el nombre de la escuela
            String name = JOptionPane.showInputDialog(this, "NOMBRE DE LA ESCUELA", Utils.CREATE_ESCUELA_FLOW_NAME, JOptionPane.QUESTION_MESSAGE);

            //Si el usuario da un nombre valido
            if (name != null && !"".equals(name)) {

                //Añade la escuela al arraylist con el nombre valido
                escuela.setNombre(name);
                escuelas.add(escuela);

                //Dos modelos para crear las listas de empleados y estudiantes
                //TODO: checar cursos
                DefaultListModel empleadoModel = new DefaultListModel();
                DefaultListModel estudianteModel = new DefaultListModel();

                empleadoModel.add(0, Utils.EMPLEADOS_LABEL);
                estudianteModel.add(0, Utils.ESTUDIANTES_LABEL);

                //Crea dos listas con los modelos
                JList<String> listaEmpleados = new JList<>(empleadoModel);
                listaEmpleados.setFont(new Font("Tahoma", 1, 16));
                JList<String> listaEstudiantes = new JList<>(estudianteModel);
                listaEstudiantes.setFont(new java.awt.Font("Tahoma", 1, 16));

                listaEmpleados.addListSelectionListener((ListSelectionEvent event) -> {
                    if (!event.getValueIsAdjusting()) {
                        JList source = (JList) event.getSource();
                        int selected = source.getSelectedIndex();
                        if (selected == 0) {
                            EscuelaUI escuelaUI = new EscuelaUI(escuela, empleadoModel, estudianteModel);
                            escuelaUI.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            escuelaUI.setVisible(true);
                        }

                    }
                });

                listaEstudiantes.addListSelectionListener((ListSelectionEvent event) -> {
                    if (!event.getValueIsAdjusting()) {
                        JList source = (JList) event.getSource();
                        int selected = source.getSelectedIndex();
                        if (selected == 0) {
                            EscuelaUI escuelaUI = new EscuelaUI(escuela, empleadoModel, estudianteModel);
                            escuelaUI.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            escuelaUI.setVisible(true);
                        }

                    }
                });
                JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,
                        listaEmpleados, listaEstudiantes);
                splitPane.setDividerLocation((int) (screenSize.getWidth() / 2.3));

                TabPanel.addTab(name, splitPane);
                TabPanel.setSelectedIndex(escuelas.size() - 1);
            }
        } else {
            JOptionPane.showMessageDialog(this, "NUMERO MAXIMO DE ESCUELAS ALCANZADO", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_escuelaMenuItemActionPerformed

    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    private void empleadoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empleadoMenuItemActionPerformed
        if (escuelas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Se necesita almenos una escuela", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Object[] tiposEmpleados = Utils.EMPLEADOS_TYPES;
            Object selectionObject = JOptionPane.showInputDialog(this, "Elige un tipo de empleado", "Menu", JOptionPane.PLAIN_MESSAGE, null, tiposEmpleados, tiposEmpleados[0]);
            String selectionTipo = selectionObject.toString();
            Escuela selectionEscuela = (Escuela) JOptionPane.showInputDialog(this, "A que escuela esta asignado", "Menu", JOptionPane.PLAIN_MESSAGE, null, escuelas.toArray(), escuelas.toArray()[0]);
            String nombreEmpleado = JOptionPane.showInputDialog(this, "Nombre del empleado", Utils.CREATE_EMPLEADO_FLOW_NAME, JOptionPane.QUESTION_MESSAGE);
            DefaultListModel empleadosModel = new DefaultListModel();
            Integer escuelaIndex = escuelas.indexOf(selectionEscuela);
            JList listaEmpleados = ((JList) ((JSplitPane) TabPanel.getComponentAt(escuelaIndex)).getLeftComponent());
            if (selectionTipo.equals(Utils.EMPLEADO_AUXILIAR)) {
                E_Auxiliar empleado = new E_Auxiliar();
                empleado.setNombre(nombreEmpleado);

                ListModel modeloEmpleados = listaEmpleados.getModel();
                for (int i = 0; i < modeloEmpleados.getSize(); i++) {
                    empleadosModel.addElement(modeloEmpleados.getElementAt(i));

                }
                empleadosModel.addElement(empleado);
                listaEmpleados.setModel(empleadosModel);
            }

        }
    }//GEN-LAST:event_empleadoMenuItemActionPerformed

    private void cursoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cursoMenuItemActionPerformed
        Escuela selectionEscuela = (Escuela) JOptionPane.showInputDialog(this, "A que escuela esta asignado", "Menu", JOptionPane.PLAIN_MESSAGE, null, escuelas.toArray(), escuelas.toArray()[0]);
        Curso curso = new Curso();
        String salon = JOptionPane.showInputDialog(this, "Salon de la escuela", Utils.CREATE_CURSO_FLOW_NAME, JOptionPane.QUESTION_MESSAGE);
        curso.setSalon(salon);
    }//GEN-LAST:event_cursoMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu CrearMenuSub;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JMenu MenuAcciones;
    private javax.swing.JTabbedPane TabPanel;
    private javax.swing.JMenuItem cursoMenuItem;
    private javax.swing.JMenuItem empleadoMenuItem;
    private javax.swing.JMenuItem escuelaMenuItem;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
